@using TestApplication.Common.Dto.CustomerCardDtos

@model CustomerCardAddDto
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Create", "CustomerCard", FormMethod.Post, new { enctype = "multipart/form-data" , id="createcustomercard" }))
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="input-group">

        <div class="form-group col-md-4">
            <label>Customer name</label>
            @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group col-md-4">
            <label>Customer Card name</label>
            @Html.EditorFor(model => model.CustomerCardName, new { htmlAttributes = new { @class = "form-control", placeholder = "Customer Card Name" } })
        </div>
        <div class="form-group col-md-4">
            <label>Product Manager name</label>
            @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                  Job  @Html.DisplayNameFor(model => model.Explanation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Priorty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeveloperName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FinishedDate)
                </th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td>
                    @Html.EditorFor(modelItem => modelItem.Explanation, new { htmlAttributes = new { @class = "form-control" } })
                </td>
                <td>
                    @Html.EditorFor(modelItem => modelItem.Priorty, new { htmlAttributes = new { @class = "form-control" } })
                </td>
                <td>
                    @Html.EditorFor(modelItem => modelItem.DeveloperName, new { htmlAttributes = new { @class = "form-control" } })
                </td>
                <td>
                    @Html.EditorFor(modelItem => modelItem.FinishedDate, new { htmlAttributes = new { @class = "form-control" } })
                </td>
            </tr>
        </tbody>

        <tfoot>
            <tr>
                <td>
                    <input class="btnAdd btn btn-default" type="button" name="name" value="Add" />
                </td>
                <td>
                    <input id="btnSubmit" type="button" value="Submit" class="btn btn-default" />
                </td>
                <td></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
}

@section scripts{
    <script>

    $(".btnAdd").click(function () {
        var td1 = '<td>@Html.EditorFor(modelItem => modelItem.Explanation, new { htmlAttributes = new { @class = "form-control" } })</td>';
        var td2 = '<td>@Html.EditorFor(modelItem => modelItem.Priorty, new { htmlAttributes = new { @class = "form-control" } })</td>';
        var td3 = '<td>@Html.EditorFor(modelItem => modelItem.DeveloperName, new { htmlAttributes = new { @class = "form-control" } })</td>';
        var td4 = '<td>@Html.EditorFor(modelItem => modelItem.FinishedDate, new { htmlAttributes = new { @class = "form-control" } })</td>';
        $("tbody").append('<tr>' + td1 + td2 + td3 + td4 + '</tr>');

    });

    function getAllData() {
        var data = [];
        var e = document.getElementById("CustomerId");
        var p = document.getElementById("ProductId");
        var d = document.getElementById("DeveloperName");
        var t = document.getElementById("CustomerCardName").value;
        $('tbody tr').each(function () {
            var Explanation = $(this).find('#Explanation').val();
            var Priorty = $(this).find('#Priorty').val();
            var DeveloperName = $(this).find('#DeveloperName').val();
            var FinishedDate = $(this).find('#FinishedDate').val();
            var CustomerName = $('#CustomerId option:selected').val()
            var CustomerCardName = t;
            var ProductManagerName = p.innerText;
            var ProgressId = 0;
            var Recipient = $(this).find('#Recipient').val();
            var Type = $(this).find('#Type').val();
            var ApprovedBy = $(this).find('#ApprovedBy').val();
            var HeadOfDepartment = $(this).find('#HeadOfDepartment').val();
            var alldata = {
                'Explanation': Explanation,
                'Priorty': Priorty,
                'DeveloperName': DeveloperName,
                'CustomerName': CustomerName,
                'CustomerCardName': CustomerCardName,
                'ProductManagerName': ProductManagerName,
                'FinishedDate': FinishedDate,
                'ProgressId': ProgressId,
                'Recipient': Recipient,
                'Type': Type,
                'ApprovedBy': ApprovedBy,
                'HeadOfDepartment': HeadOfDepartment,
            }
            data.push(alldata);
        });
        console.log(data);
        return data;
    }

    $('#btnSubmit').click(function () {
        var data = JSON.stringify(getAllData());
        console.log(data)
        $.ajax({
            url: '/CustomerCard/Create',
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(data),
            success: function () {

                alert("Data Added Successfully");
            },
            error: function () {
               location.href = '@Html.Raw(@Url.Action("Index", "CustomerCard"))';
            }
        });
    });
    </script>
}